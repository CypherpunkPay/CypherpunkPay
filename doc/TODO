
* Research viability of adding LN payments support by becoming a mere fronted to externally managed LN node
  Is this scenario technically viable?
  - Power user would manage her LN node outside of CypherpunkPay
  - User's LN node would have a separate wallet from the one used with on-chain CypherpunkPay
  - CypherpunkPay would **not** attempt to wrap LN infrastructure complexity
  - CypherpunkPay would only offer the frontend for accepting LN payments
  - Under the hood CypherpunkPay would call LN node API to
    - verify if accepting amount is possible (channels open and enough inbound capacity available)
    - create payment request
    - learn about incoming LN payment

* BUG: 0.01 Won goes below 1 satoshi and causes server error on sanity assertion

* BUG: charge_expired_to_complete__paid.jinja2 - no support for expired + confirmed + underpaid
  - underpaid and expired to pay is mistakenly presented as "we noticed your payment but it failed to confirm" while it should stress underpayment

* BUG: should validate total is not smaller than 10**-8 (because that is our assumed db precision)
  test case: 0.01 Won paid in BTC is below 1 satoshi and blows this: assert self.cc_total

* BUG: favicon.ico is not cached and always fetched (200 instead of 304)

* Add time exponential randomized skipping of (unsuccessful) callbacks

* Add log level to user config

* Consider next blockchain height being lower than current one
  - should height be updated to lower?
  - should charge confirmations should be updated to lower?
  - should charge payment and business statuses be updated to lower?

* Consider consensus forks

* Centralize VERSION tag

* Update bulma to these (css, css.map, min.css):
  https://github.com/jgthms/bulma/tree/master/css

* Maybe specify getcontext().prec = 18+18  # For example one ETH Wei is 10**-18
  See: https://docs.python.org/2/library/decimal.html#decimal.localcontext
