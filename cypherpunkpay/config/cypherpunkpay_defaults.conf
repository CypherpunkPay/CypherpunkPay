[server]

# CypherpunkPay should only listen on the localhost.
# Use a reverse proxy (caddy/nginx/apache etc) for clearnet and tor onion service wrapping for Tor network.
listen = 127.0.0.1:8080

# Relationship with a reverse proxy. You will probably never need to change these.
# These options are passed-through to builtin Waitress server and documented here:
# https://docs.pylonsproject.org/projects/waitress/en/stable/arguments.html
trusted_proxy = 127.0.0.1
trusted_proxy_count = 1
trusted_proxy_headers = x-forwarded-for x-forwarded-host x-forwarded-proto x-forwarded-port
clear_untrusted_proxy_headers = yes

# Number of threads used to process requests by Waitress server.
threads = 32

[wallets]

btc_network = testnet

# Bitcoin mainnet xpub or zpub key
# btc_mainnet_account_xpub = REPLACE_ME_WITH_BTC_MAINNET_ACCOUNT_XPUB

# Bitcoin testnet tpub or vpub key
# btc_testnet_account_xpub = REPLACE_ME_WITH_BTC_TESTNET_ACCOUNT_XPUB

[admin]

# Should admin panel be enabled and accessible over the Internet?
# You DO NOT need admin panel to receive donations.
# If you enable this option then *immediately* go to admin panel and set the password.
# An URL to your admin panel will be displayed in CypherpunkPay logs.
admin_panel_enabled = false

[full node]

btc_mainnet_node_enabled = false
btc_mainnet_node_rpc_url = http://127.0.0.1:8332
btc_mainnet_node_rpc_user = bitcoin
btc_mainnet_node_rpc_password = secret

btc_testnet_node_enabled = false
btc_testnet_node_rpc_url = http://127.0.0.1:18332
btc_testnet_node_rpc_user = bitcoin
btc_testnet_node_rpc_password = secret

[donations]

donations_enabled = true
donations_cause =
donations_fiat_currency = usd
donations_fiat_amounts = [25, 75, 125, 250, 500]

[merchant]

# Should merchant module be enabled? Set to true to receive callbacks.
merchant_enabled = false

# A callback to merchant to notify the payment is completed and order can be shipped.
# You MUST validate order values in this handler to make sure user did not tamper with the submitted checkout form.
#payment_completed_notification_url = https://YOURWEBSITE.COM/api/cypherpunkpay_payment_completed

# A callback to merchant to notify the payment failed.
# You MUST validate order values in this handler to make sure user did not tamper with the submitted checkout form.
#payment_failed_notification_url = https://YOURWEBSITE.COM/api/cypherpunkpay_payment_completed

# A link back to merchant order status page.
# User will be redirected here from CypherpunkPay in all scenarios (payment cancellation, payment completion, charge expiry, etc).
# Use {merchant_order_id} to interpolate your order id.
#back_to_merchant_url = https://YOURWEBSITE.COM/order/{merchant_order_id}

# CypherpunkPay will authenticate to merchant with this token in an HTTP header:
# Authorization: Bearer <cypherpunkpay_to_merchant_auth_token>
# You MUST verify this in your notification callback handler.
#cypherpunkpay_to_merchant_auth_token = REPLACE_ME_WITH_CYPHERPUNKPAY_TO_MERCHANT_AUTH_TOKEN

# If you want to call CypherpunkPay API from your merchant solution, you must authenticate with an HTTP header:
# Authorization: Bearer <merchant_to_cypherpunkpay_auth_token>
#merchant_to_cypherpunkpay_auth_token = REPLACE_ME_WITH_MERCHANT_TO_CYPHERPUNKPAY_AUTH_TOKEN

# Indicates if the callbacks (completed, failed) should be over clearnet even when Tor is enabled.
# This option has no effect if Tor is disabled.
# For local network connections Tor is skipped anyway, so usually there is no need to set this option.
# One case this option may be useful is when the merchant app is behind aggressive proxy like CloudFlare which mistreats Tor requests.
#skip_tor_for_merchant_callbacks = false

[db]

db_file_path = /var/lib/cypherpunkpay/needs-backup/cypherpunkpay.sqlite3

[tor]

use_tor = true
tor_socks5_host = 127.0.0.1
tor_socks5_port = 9050

[expert]

# Visual theme effective for donations and merchant payments. Supported themes:
# - plain
# - entertainment
theme = plain

# User is expected to broadcast transaction(s) totaling the requested amount within this time window.
# The transactions can be and very often will be unconfirmed at this stage.
# If the time window is missed the charge is marked as expired, a final state.
# Even for expired charges the software will still track and recognize potential late payments to make manual refunds easier.
charge_payment_timeout_in_minutes = 20

# User transaction(s) are expected to **fully confirm** within this time window.
# Specific number of confirmations depends on cryptocurrency and other technical conditions.
# For Bitcoin, this is currently hardcoded as 2 confirmations.
# If user paid with multiple transactions, then enough of them must be fully confirmed to cover the requested amount.
charge_completion_timeout_in_hours = 48

# All routes are served under the /cypherpunkpay/ prefix by default.
# To disable path prefix set value to /
path_prefix = /cypherpunkpay
