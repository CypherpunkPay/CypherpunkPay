[server]


[db]

db_file_path = /tmp/cypherpunkpay_test.sqlite3


[wallets]

btc_network = testnet
xmr_network = stagenet

btc_testnet_account_xpub = vpub5UtSQhMcYBgGe3UxC5suwHbayv9Xw2raS9U4kyv5pTrikTNGLbxhBdogWm8TffqLHZhEYo7uBcouPiFQ8BNMP6JFyJmqjDxxUyToB1RcToF

xmr_stagenet_main_address = 5BKTP2n9Tto6fJ25fv5seHUwuyiSFk2kZJV5LKnQkXp4DknK1e28tPGiEWqbLMJ4wWamGACRW7aTZEXiqEsbgJGfK2QffLz
xmr_stagenet_secret_view_key = 1543738e3ff094c144ed6697a26beb313c765ffd368b781bd4602a4c6153c305
xmr_stagenet_wallet_created = 2020


[admin]

admin_panel_enabled = true


[merchant]

# Should merchant module be enabled? Set to true to receive callbacks.
merchant_enabled = true

# A callback to merchant to notify the payment is completed and order can be shipped.
# You MUST validate order values in this handler to make sure user did not tampered with the submitted checkout form.
payment_completed_notification_url = http://127.0.0.1:6543/cypherpunkpay/dummystore/cypherpunkpay_payment_completed

# A link back to merchant order status page.
# User will be redirected here from CypherpunkPay in all scenarios (payment cancellation, payment completion, charge expiry, etc).
back_to_merchant_url = http://127.0.0.1:6543/cypherpunkpay/dummystore/order/{merchant_order_id}

# CypherpunkPay will authenticate to merchant with this token in an HTTP header:
# Authorization: Bearer <cypherpunkpay_to_merchant_auth_token>
# You MUST verify this in your notification callback handler.
cypherpunkpay_to_merchant_auth_token = nsrzukv53xjhmw4w5ituyk5cre

# If you want to call CypherpunkPay API from your merchant solution, you must authenticate with an HTTP header:
# Authorization: Bearer <merchant_to_cypherpunkpay_auth_token>
merchant_to_cypherpunkpay_auth_token = 4xy2dryumdnfng53tmym2dvfxm


[dummystore]

# This is only used for development and testing. It enables a dummy store to work against.
dummystore_enabled = true
